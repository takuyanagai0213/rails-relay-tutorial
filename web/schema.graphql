type Comment {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  post: Post!
  postId: Int
  updatedAt: ISO8601DateTime!
}

"""The connection type for Comment."""
type CommentConnection {
  """A list of edges."""
  edges: [CommentEdge]

  """A list of nodes."""
  nodes: [Comment]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type CommentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Comment
}

"""Autogenerated input type of CreateComment"""
input CreateCommentInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  postId: ID!
}

"""Autogenerated return type of CreateComment"""
type CreateCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  comment: Comment
}

"""Autogenerated input type of CreatePost"""
input CreatePostInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  title: String!
  content: String
  userId: ID!
}

"""Autogenerated return type of CreatePost"""
type CreatePostPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  post: Post
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  email: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

"""Autogenerated input type of DeleteUser"""
input DeleteUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: ID!
}

"""Autogenerated return type of DeleteUser"""
type DeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

type Group implements Node {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  updatedAt: ISO8601DateTime!
  users: [User!]!
}

"""The connection type for Group."""
type GroupConnection {
  """A list of edges."""
  edges: [GroupEdge]

  """A list of nodes."""
  nodes: [Group]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type GroupEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Group
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  createComment(
    """Parameters for CreateComment"""
    input: CreateCommentInput!
  ): CreateCommentPayload
  createPost(
    """Parameters for CreatePost"""
    input: CreatePostInput!
  ): CreatePostPayload
  createUser(
    """Parameters for CreateUser"""
    input: CreateUserInput!
  ): CreateUserPayload
  deleteUser(
    """Parameters for DeleteUser"""
    input: DeleteUserInput!
  ): DeleteUserPayload

  """An example field added by the generator"""
  testField: String!
  updateUser(
    """Parameters for UpdateUser"""
    input: UpdateUserInput!
  ): UpdateUserPayload
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Post implements Node {
  comments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CommentConnection!
  content: String
  createdAt: ISO8601DateTime!
  id: ID!
  title: String
  updatedAt: ISO8601DateTime!
  user: User!
}

"""The connection type for Post."""
type PostConnection {
  """A list of edges."""
  edges: [PostEdge]

  """A list of nodes."""
  nodes: [Post]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type PostEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Post
}

type Query {
  comments: [Comment!]!
  groups: [Group!]

  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node

  """Fetches a list of objects given a list of IDs."""
  nodes(
    """IDs of the objects."""
    ids: [ID!]!
  ): [Node]!
  posts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PostConnection!
  users: [User!]!
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: ID!
  name: String!
  email: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

type User implements Node {
  createdAt: ISO8601DateTime!
  email: String
  groups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection!
  id: ID!
  name: String
  posts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PostConnection!
  updatedAt: ISO8601DateTime!
}

