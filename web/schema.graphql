"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  email: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

"""Autogenerated input type of DeleteUser"""
input DeleteUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: ID!
}

"""Autogenerated return type of DeleteUser"""
type DeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

type Group {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  updatedAt: ISO8601DateTime!
  users: [User!]!
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  createUser(
    """Parameters for CreateUser"""
    input: CreateUserInput!
  ): CreateUserPayload
  deleteUser(
    """Parameters for DeleteUser"""
    input: DeleteUserInput!
  ): DeleteUserPayload

  """An example field added by the generator"""
  testField: String!
  updateUser(
    """Parameters for UpdateUser"""
    input: UpdateUserInput!
  ): UpdateUserPayload
}

type Query {
  """An example field added by the generator"""
  testField: String!
  users: [User!]!
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: ID!
  name: String!
  email: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

type User {
  createdAt: ISO8601DateTime!
  email: String
  groups: [Group!]!
  id: ID!
  name: String
  updatedAt: ISO8601DateTime!
}

